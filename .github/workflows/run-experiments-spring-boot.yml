name: Run Experiment

on:
  schedule:
    - cron: "0 23 * * 5"
  workflow_dispatch:

env:
  DEVELOCITY_URL: "https://ge.solutions-team.gradle.com"
  GIT_REPO: "https://github.com/gradle/common-custom-user-data-gradle-plugin"
  TASKS: "assemble"

jobs:
  experiment:
    strategy:
      fail-fast: false
      matrix:
        include:
          - experimentId: 3
    runs-on: ubuntu-latest
    outputs:
      results: ${{ steps.fetch-results.outputs.results }}
      experimentId: ${{ matrix.experimentId }}
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: 17
          distribution: "temurin"
      - name: Download latest version of the validation scripts
        uses: gradle/develocity-build-validation-scripts/.github/actions/gradle/download@actions-stable
        with:
          downloadDevelopmentRelease: true
      - name: Run experiment 3
        uses: gradle/develocity-build-validation-scripts/.github/actions/gradle/experiment-3@actions-stable
        env:
          DEVELOCITY_ACCESS_KEY: "${{ secrets.DEVELOCITY_ACCESS_KEY }}"
        with:
          gitRepo: ${{ env.GIT_REPO }}
          tasks: ${{ env.TASKS }}
          develocityUrl: ${{ env.DEVELOCITY_URL }}
          failIfNotFullyCacheable: true
      - name: Fetch experiment results
        id: fetch-results
        working-directory: develocity-gradle-build-validation
        run: |
          build_scans="$(cat ".data/03-validate-local-build-caching-different-locations/latest/build-scans.csv")"
          develocity_server="$(echo "$build_scans" | tail -1 | cut -d ',' -f3)"
          second_build_scan_id="$(echo "$build_scans" | tail -1 | cut -d ',' -f5)"
          second_build_results="$(curl -s \
            -H "Authorization: Bearer ${{ secrets.DEVELOCITY_API_KEY }}" \
            "$develocity_server/api/builds/$second_build_scan_id/gradle-build-cache-performance")"
          echo "results=$second_build_results" >> "$GITHUB_OUTPUT"

  analyze:
    runs-on: ubuntu-latest
    needs: experiment
    steps:
      - name: Analyze experiment results
        id: analyze
        env:
          EXPERIMENT_RESULTS: ${{ needs.experiment.outputs }}
        run: |
          echo "$EXPERIMENT_RESULTS"
